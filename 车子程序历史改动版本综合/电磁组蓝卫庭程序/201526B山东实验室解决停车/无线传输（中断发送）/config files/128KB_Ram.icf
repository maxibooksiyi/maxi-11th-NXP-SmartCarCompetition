/*************************************
 任务：修改ICF文件，RAM启动
 团队：首安六队
 时间：2014.01.15
*************************************/
/*###ICF### Section handled by ICF editor, don't touch! ****/
/*-Editor annotation file-*/
/* IcfEditorFile="$TOOLKIT_DIR$\config\ide\IcfEditor\cortex_v1_0.xml" */
/*-Specials-*/
define symbol __ICFEDIT_intvec_start__ = 0x1fff0000;//RAM 启动要设置为 RAM 起始地址，ROM 启动也要设为 ROM 的起始地址 
/*-Memory Regions-*/
define symbol __ICFEDIT_region_ROM_start__ = 0x00000000;  //ROM 地址 
define symbol __ICFEDIT_region_ROM_end__   = 0x00040000;
define symbol __ICFEDIT_region_RAM_start__ = 0x1fff0000;  //RAM 地址 
define symbol __ICFEDIT_region_RAM_end__   = 0x20000000;
/*-Sizes-*/
define symbol __ICFEDIT_size_cstack__ = 0x1000;  //堆大小
define symbol __ICFEDIT_size_heap__   = 0x800;   //栈大小
/**** End of ICF editor section. ###ICF###*/

/****上面由ICF编辑，下面自己修改****/
define symbol __region_RAM2_start__ = 0x20000000; //SRAM 是分成两块的，RAM2 即 SRAM_U ，RAM 为 SRAM_L 
define symbol __region_RAM2_end__ = 0x20000000+__ICFEDIT_region_RAM_end__ - __ICFEDIT_region_RAM_start__;

define exported symbol __VECTOR_TABLE =__ICFEDIT_intvec_start__; //代码编译进 ROM ,则 0x00000000;RAM，则 __ICFEDIT_region_RAM_start__
define exported symbol __VECTOR_RAM =__ICFEDIT_region_RAM_start__; //前面的 RAM 留给 RAM User Vector Table 

define exported symbol __BOOT_STACK_ADDRESS = __region_RAM2_end__ - 8;	//0x2000FFF8;启动栈地址，中断向量表的第一个元素就是指向这里 

define symbol __code_start__ = __ICFEDIT_intvec_start__+0x410;

define memory mem with size = 4G;
define region ROM_region   = mem:[from __ICFEDIT_region_ROM_start__   to __ICFEDIT_region_ROM_end__];
define region RAM_region   = mem:[from __ICFEDIT_region_RAM_start__   to __ICFEDIT_region_RAM_end__] | mem:[from __region_RAM2_start__ to __region_RAM2_end__];

define block CSTACK    with alignment = 8, size = __ICFEDIT_size_cstack__   { }; //堆，8字节对齐
define block HEAP      with alignment = 8, size = __ICFEDIT_size_heap__     { }; //栈，8字节对齐

initialize manually { readwrite };
initialize manually { section .data};
initialize manually { section .textrw };
do not initialize  { section .noinit };

define block CodeRelocate { section .textrw_init };
define block CodeRelocateRam { section .textrw };


place at address mem:__ICFEDIT_intvec_start__ { readonly section .intvec };
place at address mem:__code_start__ { readonly section .noinit };

place in RAM_region   { readonly, block CodeRelocate };

place in RAM_region   { readwrite, block CodeRelocateRam,
                        block CSTACK, block HEAP };